version: '3.9'

services:
  zookeeper:
    image: wurstmeister/zookeeper:latest
    container_name: zookeeper
    networks:
      - kafka-net
    ports:
      - "2181:2181"

  kafka:
    image: wurstmeister/kafka:latest
    container_name: kafka
    networks:
      - kafka-net
    ports:
      - "9092:9092"
    environment:
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  order-service:
    build:
      context: ./order
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8000:8000"
    networks:
      - kafka-net
    depends_on:
      - kafka
    volumes:
      - ./order/dapr.yml:/app/config/dapr.yml  # Mount dapr.yml for order service

  payment-service:
    build:
      context: ./payment
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "8001:8001"
    networks:
      - kafka-net
    depends_on:
      - kafka
    volumes:
      - ./payment/dapr.yml:/app/config/dapr.yml  # Mount dapr.yml for payment service

  dapr-order:
    image: daprio/daprd:latest
    command: [
      "./daprd",
      "-app-id", "order-service",
      "-app-port", "8000",
      "-dapr-http-port", "3500"
    ]
    depends_on:
      - order-service
    networks:
      - kafka-net
    ports:
      - "3500:3500"

  dapr-payment:
    image: daprio/daprd:latest
    command: [
      "./daprd",
      "-app-id", "payment-service",
      "-app-port", "8001",
      "-dapr-http-port", "3501"
    ]
    depends_on:
      - payment-service
    networks:
      - kafka-net
    ports:
      - "3501:3501"

networks:
  kafka-net:
    driver: bridge